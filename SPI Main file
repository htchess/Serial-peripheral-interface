`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 06/02/2023 12:50:22 AM
// Design Name: 
// Module Name: spi
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module spi(
    input clk,
    input rst,
    input [15:0] data_in,
    output reg sclk,
    output reg cs_l,
    output reg [15:0] MOSI,
    output reg [4:0] count
    );
     reg [2:0]state;
     always@(posedge clk or posedge rst)
     if(rst)begin
     MOSI <= 16'b0;
     count <= 5'd16 ;
     cs_l <= 1'b1;
     sclk <= 1'b0;
     end
     
     else begin
     case(state)
     0 : begin
     sclk <= 1'b0;
     cs_l<= 1'b1;
     state <= 1;
     end
     
     1:begin
     sclk <= 1'b0;
     cs_l <= 1'b0;
     MOSI <=data_in[count - 1];
     count <= count - 1 ;
     state <= 2;
     end
     
     2:begin
     sclk <= 1'b1;
     if(count > 0)
     state <= 1;
     else begin
     count <= 16;
     state <= 0;
    end
    end
    default :state <= 0;
    endcase
    end
    
endmodule
